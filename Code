// Note: Code will only work correctly / without errors on Windows devices.
// To run on other devices, remove "#include <windows.h> and "SetConsoleOutputCP(CP_UTF8)".
// The homescreen and rules screen will look weird and broken, but the game itself will run.
// 2 problems:
// 1: The "deck shuffling" code gives the same result every time.
// 2: The logic for forcing the lowest card doesn't work.
// (And if it does, I don't know how)
#include <iostream>
#include <algorithm>
#include <random>
#include <ctime>
#include <limits>
#include <windows.h>
#include <vector>

using namespace std;

// Function declarations
void game();
void displayRules();
void dealCards();
void firstTurn();

int main()
{
    SetConsoleOutputCP(CP_UTF8);
    string deck[52];
    game(); // This controls everything
    return 0;
}

// Runs the game itself
void game() {
    // Starts the program by displaying the homescreen / title screen.
    char homeInput;
    cout << "╔═══════════════════════════════════════════════╗\n";
    cout << "║             ╔═══╦╗ ╔╦═══╦╗╔═╦═══╗             ║\n";
    cout << "║             ║╔═╗║║ ║║╔═╗║║║╔╣╔═╗║             ║\n";
    cout << "║             ║║ ╚╣║ ║║╚═╝║╚╝╝║║ ║║             ║\n";
    cout << "║             ║║╔═╣║ ║║╔╗╔╣╔╗║║╚═╝║             ║\n";
    cout << "║             ║╚╩═║╚═╝║║║╚╣║║╚╣╔═╗║             ║\n";
    cout << "║             ╚═══╩═══╩╝╚═╩╝╚═╩╝ ╚╝             ║\n";
    cout << "╚═══════════════════════════════════════════════╝\n";
    cout << "            Press 1 to start the game            \n";
    cout << "            Press 2 to view the rules            \n";
    cout << "            Press 0 to close the game            \n";
    cin >> homeInput;
    // Displays the rules screen
    if (homeInput == '2'){
        system("cls");
        displayRules();
    }
    // Starts the game part of the program.
    else if (homeInput == '1'){
        cout << "Starting the game...";
        system("cls");
        dealCards();
        firstTurn();
    }
    // Closes the program from the homescreen.
    else if (homeInput == '0'){
        cout << "Exiting...\n";
        exit(0);
    }

    else {
        system("cls");
        cout << "Invalid input. Please try again.\n";
        game(); // restart the prompt
    }
}

// This function controls the rules screen.
// View this if you don't know the rules / need a refresher.
void displayRules() {
    char rulesInput;
    cout << "╔════════════════════════════════════════════════════════════════════════════════════════════════╗\n";
    cout << "║                                    The Rules of Gurka                                          ║\n";
    cout << "║                                                                                                ║\n";
    cout << "║Gurka is played by 3-7 players                                                                  ║\n";
    cout << "║Each player is dealt 6 cards                                                                    ║\n";
    cout << "║Player 1 goes first to start, and the winner of each trick (round) begins the next one          ║\n";
    cout << "║Play goes in numerical order (1, 2, 3, etc. for game start)                                     ║\n";
    cout << "║H, D, S, and C after a number represent card (E.X. 10S is the 10 of Spades)                     ║\n";
    cout << "║After the first card in each round, players must match or beat the value of the highest card    ║\n";
    cout << "║If this is not possible, your lowest value card must be played                                  ║\n";
    cout << "║Repeat this until all players have 1 card left                                                  ║\n";
    cout << "║The player with the lowest value card at the end wins                                           ║\n";
    cout << "╚════════════════════════════════════════════════════════════════════════════════════════════════╝\n";
    cout << "                             Press any key to return to the Main Menu                             \n";
    cout << "                                   Press '0' to exit the game                                  \n";
    cin >> rulesInput;
    // Controls the inputs for when this screen is displayed.
    if (rulesInput == '0') {
        cout << "Exiting...\n";
        exit(0);
    } else {
        system("cls");
        game();
    }
}

void dealCards()
{
    // This array represents a deck of cards
   vector<string> deck = {"2H ", "3H ", "4H ", "5H ", "6H ", "7H ", "8H ", "9H ", "10H ", "JH ", "QH ", "KH ", "AH ",
                          "2D ", "3D ", "4D ", "5D ", "6D ", "7D ", "8D ", "9D ", "10D ", "JD ", "QD ", "KD ", "AD ",
                          "2S ", "3S ", "4S ", "5S ", "6S ", "7S ", "8S ", "9S ", "10S ", "JS ", "QS ", "KS ", "AS ",
                          "2C ", "3C ", "4C ", "5C ", "6C ", "7C ", "8C ", "9C ", "10C ", "JC ", "QC ", "KC ", "AC "};

    // Random device for selecting cards.
    random_device w;
    mt19937 autoShuffle (w());

    shuffle(deck.begin(), deck.end(), autoShuffle);

    // Player 1's hand.
    vector <string> p1Hand = {"0", "1", "2", "3", "4", "5"};
    // Player 2's hand.
    vector <string> p2Hand = {"0", "1", "2", "3", "4", "5"};
    // Player 3's hand.
    vector <string> p3Hand = {"0", "1", "2", "3", "4", "5"};

    // Randomly assigns values to player 1's hand, then removes assigned values from the deck.
    for (size_t i = 0; i < 6; ++i){
    p1Hand[i] = deck.back();
    deck.pop_back();
    }

    // Randomly assigns values to player 2's hand, then removes assigned values from the deck.
    for (size_t i = 0; i < 6; ++i){
    p2Hand[i] = deck.back();
    deck.pop_back();
    }

    // Randomly assigns values to player 3's hand, then removes assigned values from the deck.
    for (size_t i = 0; i < 6; ++i){
    p3Hand[i] = deck.back();
    deck.pop_back();
    }

    // Displays each player's hands.
    cout << "Player 1's hand: " << "(1) " << p1Hand.at(0) << "(2) " << p1Hand.at(1) << "(3) " << p1Hand.at(2) << "(4) " << p1Hand.at(3) << "(5) " << p1Hand.at(4) << "(6) " << p1Hand.at(5) << "\n\n";
    cout << "Player 2's hand: " << "(1) " << p2Hand.at(0) << "(2) " << p2Hand.at(1) << "(3) " << p2Hand.at(2) << "(4) " << p2Hand.at(3) << "(5) " << p2Hand.at(4) << "(6) " << p2Hand.at(5) << "\n\n";
    cout << "Player 3's hand: " << "(1) " << p3Hand.at(0) << "(2) " << p3Hand.at(1) << "(3) " << p3Hand.at(2) << "(4) " << p3Hand.at(3) << "(5) " << p3Hand.at(4) << "(6) " << p3Hand.at(5) << "\n\n";
}

// Keep getting this error message in the console (Most recent):
//terminate called after throwing an instance of 'std::out_of_range'
//what():  vector::_M_range_check: __n (which is 0) >= this->size() (which is 0)
// Not sure what's causing it.
void firstTurn()
{
    vector<string> p1Hand;
    vector<string> p2Hand;
    vector<string> p3Hand;
    int p1Choice;
    int p2Choice;
    int p3Choice;

    // The card Player 1 chooses to play.
    cout << "Player 1's Turn. Please select a card.\n\n";
    cin >> p1Choice;
    cout << "\n\n";

    // Logic for selecting which card is used from Player 1's hand.
    if (p1Choice == 1)
    {
        cout << p1Hand.at(0);
    }
    else if (p1Choice == 2)
    {
        cout << p1Hand.at(1);
    }
    else if (p1Choice == 3)
    {
        cout << p1Hand.at(2);
    }
    else if (p1Choice == 4)
    {
        cout << p1Hand.at(3);
    }
    else if (p1Choice == 5)
    {
        cout << p1Hand.at(4);
    }
    else if (p1Choice == 6)
    {
        cout << p1Hand.at(5);
    }
    else
    {
        cin.ignore();
    }
}
