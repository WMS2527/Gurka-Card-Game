// Note: Code will only work correctly / without errors on Windows devices.
// To run on other devices, remove "#include <windows.h> and "SetConsoleOutputCP(CP_UTF8)".
// The homescreen and rules screen will look weird and broken, but the game itself will run.
#include <iostream>
#include <algorithm>
#include <random>
#include <ctime>
#include <limits>
#include <windows.h>

using namespace std;

// Function declarations
void game();
void displayRules();
void dealCards();

int main()
{
    SetConsoleOutputCP(CP_UTF8);
    string deck[52];
    game(); // This controls everything
    return 0;
}

// Runs the game itself
void game() {
    // Starts the program by displaying the homescreen / title screen.
    char homeInput;
    cout << "╔═══════════════════════════════════════════════╗\n";
    cout << "║             ╔═══╦╗ ╔╦═══╦╗╔═╦═══╗             ║\n";
    cout << "║             ║╔═╗║║ ║║╔═╗║║║╔╣╔═╗║             ║\n";
    cout << "║             ║║ ╚╣║ ║║╚═╝║╚╝╝║║ ║║             ║\n";
    cout << "║             ║║╔═╣║ ║║╔╗╔╣╔╗║║╚═╝║             ║\n";
    cout << "║             ║╚╩═║╚═╝║║║╚╣║║╚╣╔═╗║             ║\n";
    cout << "║             ╚═══╩═══╩╝╚═╩╝╚═╩╝ ╚╝             ║\n";
    cout << "╚═══════════════════════════════════════════════╝\n";
    cout << "            Press 1 to start the game            \n";
    cout << "            Press 2 to view the rules            \n";
    cout << "            Press 0 to close the game            \n";
    cin >> homeInput;
    cout << "\n";
    // Does different things depending on what the input is.
    if (homeInput == '2'){
        displayRules();
    }

    else if (homeInput == '1'){
        cout << "Starting the game...\n";
        dealCards();
    }

    else if (homeInput == '0'){
        cout << "Exiting...\n";
        exit(0);
    }

    else {
        cout << "Invalid input. Please try again.\n";
        game(); // restart the prompt
    }
}

// This function controls the rules screen.
// View this if you don't know the rules / need a refresher.
void displayRules() {
    char rulesInput;
    cout << "╔════════════════════════════════════════════════════════════════════════════════════════════════╗\n";
    cout << "║                                    The Rules of Gurka                                          ║\n";
    cout << "║                                                                                                ║\n";
    cout << "║Gurka is played by 3-7 players                                                                  ║\n";
    cout << "║Each player is dealt 6 cards                                                                    ║\n";
    cout << "║Player 1 goes first to start, and the winner of each trick (round) begins the next one          ║\n";
    cout << "║Play goes in numerical order (1, 2, 3, etc. for game start)                                     ║\n";
    cout << "║H, D, S, and C after a number represent card (E.X. 10S is the 10 of Spades)                     ║\n";
    cout << "║After the first card in each round, players must match or beat the value of the highest card    ║\n";
    cout << "║If this is not possible, your lowest value card must be played                                  ║\n";
    cout << "║Repeat this until all players have 1 card left                                                  ║\n";
    cout << "║The player with the lowest value card at the end wins                                           ║\n";
    cout << "╚════════════════════════════════════════════════════════════════════════════════════════════════╝\n";
    cout << "                             Press any key to return to the Main Menu                             \n";
    cout << "                                   Press '0' to exit the game                                  \n";
    cin >> rulesInput;
    cout << "\n";

    if (rulesInput == '0') {
        cout << "Exiting...\n";
        exit(0);
    } else {
        game();
    }
}

void dealCards()
{
    // This array represents a deck of cards
    string deck[52] = {"2H ", "3H ", "4H ", "5H ", "6H ", "7H ", "8H ", "9H ", "10H ", "JH ", "QH ", "KH ", "AH ",
                       "2D ", "3D ", "4D ", "5D ", "6D ", "7D ", "8D ", "9D ", "10D ", "JD ", "QD ", "KD ", "AD ",
                       "2S ", "3S ", "4S ", "5S ", "6S ", "7S ", "8S ", "9S ", "10S ", "JS ", "QS ", "KS ", "AS ",
                       "2C ", "3C ", "4C ", "5C ", "6C ", "7C ", "8C ", "9C ", "10C ", "JC ", "QC ", "KC ", "AC "};
    // Create a system here to remove a value from the
    // array once it's been assigned to an index variable.
    // (The same card can't show up twice in a deck.)
    srand(time(0));
    // Player 1's hand.
    string player1Hand[6];
    // Player 2's hand.
    string player2Hand[6];
    // Player 3's hand.
    string player3Hand[6];

    // Randomly assigns values to player's hands.
    for(int i = 0; i < 6; i++)
    {
        int cardDraw = rand() % 52;
        deck[cardDraw];
        player1Hand[i] = deck[cardDraw];
    }

        for(int i = 0; i < 6; i++)
    {
        int cardDraw = rand() % 52;
        deck[cardDraw];
        player2Hand[i] = deck[cardDraw];
    }

        for(int i = 0; i < 6; i++)
    {
        int cardDraw = rand() % 52;
        deck[cardDraw];
        player3Hand[i] = deck[cardDraw];
    }

    // Displays each player's hands.
    cout << "Player 1's hand: " << player1Hand[0] << "\n";
    cout << "Player 2's hand: " << player2Hand[0] << "\n";
    cout << "Player 3's hand: " << player3Hand[0] << "\n";
}
// Current Goal: Get each player to receive 6 cards instead of just 1.

    cout << "Player 3's hand: " << deck[index3] << "\n";
}
// Next Goal: Get each player to recieve 6 cards instead of just 1.
